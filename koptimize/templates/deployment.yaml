apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "koptimize.fullname" . }}
  labels:
    {{- include "koptimize.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "koptimize.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "koptimize.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "koptimize.serviceAccountName" . }}
      priorityClassName: {{ .Values.priorityClassName }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-controller
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          args:
            - controller
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP              
          # TODO: add probes    
          # livenessProbe:
          #  httpGet:
          #     path: /
          #     port: metrics
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: metrics
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
        {{- if .Values.scheduler.enabled }}
        - name: {{ .Chart.Name }}-scheduler
          securityContext:
            {{- toYaml .Values.scheduler.securityContext | nindent 12 }}
          image: "{{ .Values.scheduler.image.repository }}:{{ .Values.scheduler.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.scheduler.image.pullPolicy }}
          args:
            - scheduler
            - --config=/scheduler/scheduler-config.yaml
            - --v=3          
          resources:
            {{- toYaml .Values.scheduler.resources | nindent 12 }}
          volumeMounts:
            - name: scheduler-config
              mountPath: /scheduler
        {{- end }}   
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.scheduler.enabled }}
      volumes:
        - name: scheduler-config
          configMap:
            name: {{ include "koptimize.fullname" . }}
      {{- end }} 